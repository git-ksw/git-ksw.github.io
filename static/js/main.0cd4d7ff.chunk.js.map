{"version":3,"sources":["pages/components/Topnav.jsx","pages/components/Search.jsx","pages/components/Footer.jsx","pages/components/Table/Form.jsx","pages/components/Table/Post.js","pages/components/Table/Pagination.js","pages/components/Table/Report.jsx","pages/hooks/useFetch.jsx","pages/hooks/useFetchFilter.jsx","pages/components/Charts/Bar.jsx","pages/components/Charts/Pie.jsx","pages/components/Charts/StackBar.jsx","pages/components/MonthTable.jsx","pages/components/Loading.jsx","pages/MonUncleanData.jsx","pages/Home.jsx","pages/hooks/useFetchFormFilter.jsx","pages/MonthCondition.jsx","pages/API/getToken.jsx","App.js","reportWebVitals.js","index.js"],"names":["Topnav","Fragment","className","Button","Search","props","useState","region","setRegion","useForm","defaultValues","firstName","lastName","email","control","value","register","handleSubmit","errors","formState","formatDate","current_datetime","getFullYear","getMonth","toString","slice","onSubmit","event","startDate","endDate","console","log","handleOnSubmit","onChange","target","name","regionData","map","el","idx","id","selected","message","storeData","undefined","Object","values","filter","item","regionId","store","defaultValue","Date","render","field","dateFormat","showMonthYearPicker","showFullMonthYearPicker","type","Footer","Form","tableData","formData","data","setFormIdFilter","i","sections","length","fields","push","text","Posts","posts","entries","index","Pagination","postsPerPage","totalPosts","paginate","pageNumbers","Math","ceil","number","onClick","Report","currentPage","setCurrentPage","indexOfLast","indexOfFirst","searchMonth","tmp","reportData","test","answers","cnt","tablePass","j","post","useFetch","url","setData","setError","loading","setLoading","useEffect","a","axios","get","headers","localStorage","getItem","response","fetchData","useFetchFilter","encodeURIComponent","BarShape","data1","dataType","data2","data3","data4","原材料","温度","トイレ","その他","ResponsiveContainer","width","height","BarChart","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","Bar","fill","COLORS","RADIAN","PI","renderCustomizedLabel","cx","cy","midAngle","innerRadius","outerRadius","percent","radius","x","cos","y","sin","textAnchor","dominantBaseline","toFixed","PieShape","PieChart","Pie","labelLine","label","entry","Cell","stackId","MonthTable","columns","useTable","useGlobalFilter","useSortBy","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","setGlobalFilter","style","fontWeight","fontSize","headerGroup","getHeaderGroupProps","column","getHeaderProps","row","tridx","getRowProps","cells","cell","getCellProps","Loading","role","MonUncleanData","typeName","monthUncleanData","sum","Home","storeIdFilter","setStoreIdFilter","formIdFilter","typeId","setTypeIdFilter","chart","setChart","setStartDate","setEndDate","form","storeId","useFetchFormFilter","report","start","end","monthData","Number","c","MonthCondition","monUncleanData","monColumns","useMemo","accessor","Header","monData","charts","cl","API","App","password","token","setToken","setItem","fetchToken","GetToken","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0cd4d7ff.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Button} from \"react-bootstrap\";\r\n\r\nfunction Topnav() {\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div  className=\"bg-gray d-flex justify-content-center py-3 font-weight-bold w-100 align-items-center ez-xl\">\r\n          <div className=\"text-white\">\r\n            EASY FILERS DASHBOARD V2.0 違反分析\r\n          </div>\r\n          <div className=\"\">\r\n          <Button className=\"mx-2\">\r\n            現場記録管理システム\r\n          </Button>\r\n          <Button>\r\n          トップページ\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Topnav;\r\n","import React, { useState } from 'react';\r\nimport { useForm ,Controller} from 'react-hook-form';\r\nimport DatePicker from \"react-datepicker\"\r\n\r\nimport {Button} from \"react-bootstrap\"\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\"\r\n\r\n\r\n\r\nfunction Search(props) {\r\n  // const [startDate,setStartDate]= useState(new Date());\r\n  // const [endDate,setEndDate]= useState(new Date());\r\n  let [region,setRegion]= useState('60cd6078061f9c0ee82403aa');\r\n  const {value,control, register, handleSubmit, formState: { errors }} = useForm({ defaultValues: {\r\n    firstName: \"bill\",\r\n    lastName: \"luo\",\r\n    email: \"bluebill1049@hotmail.com\"\r\n  }});\r\n\r\n    const formatDate = (current_datetime)=>{\r\n      var year = current_datetime.getFullYear();\r\n      var month = current_datetime.getMonth()+1;\r\n      var format = year+\"-\"+((\"00\"+month.toString()).slice(-2));\r\n      return format;\r\n  }\r\n  \r\n  const onSubmit = (event) => {\r\n    event.startDate=formatDate(event.startDate)\r\n    event.endDate=formatDate(event.endDate)\r\n    console.log(event)\r\n    props.handleOnSubmit(event)\r\n  };\r\n\r\n  const handleOnChange = (event) =>{\r\n    setRegion(region=event.target.value)\r\n    console.log(region)\r\n  } \r\n\r\n  return (\r\n    <React.Fragment>\r\n\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n        <div className=\"bg-light p-2 d-flex justify-content-between\">\r\n        <select \r\n          value={region}\r\n          onChange={handleOnChange}\r\n          name=\"region\"\r\n          className=\"py-1 me-3 w-100 rounded\"\r\n        >\r\n        {\r\n          props.regionData &&\r\n          props.regionData.map((el,idx)=>\r\n          <option key={idx} value={el.id}  selected={el.id==region?true:false}>{el.name}</option>\r\n          )\r\n        }\r\n        </select>\r\n        {errors.region && errors.region.message}\r\n        <select \r\n          name=\"store\"\r\n          className=\"py-1 me-3 w-100 rounded\"\r\n          {...register(\"store\", {\r\n          })}\r\n        >\r\n          { props.storeData && props.storeData !== undefined && \r\n          Object.values(props.storeData).filter(item=>item.regionId===region).map((el,idx)=>\r\n          <option key={idx} value={el.id}>{el.name}</option>\r\n          )\r\n        }\r\n        </select>\r\n        {errors.store && errors.store.message}\r\n        <select \r\n          name=\"dataType\"\r\n          className=\"py-1 me-3 w-100 rounded\"\r\n          {...register(\"dataType\", {\r\n          })}\r\n        >\r\n          <option value=\"60cdc047db2269136c7c28ac\">原材料仕入チェック</option>\r\n          <option value=\"60cdc056db2269136c7c28ad\" >温度管理記録</option>\r\n          <option value=\"60cdc065db2269136c7c28ae\">トイレ清掃記録</option>\r\n          <option value=\"60cdc09adb2269136c7c28b0\">その他</option>\r\n          <option value=\"61349b3499e12e0b857cef82\">日報</option>\r\n        </select>\r\n        <select \r\n          name=\"charts\"\r\n          className=\"py-1 me-3 w-100 rounded\"\r\n          {...register(\"charts\", {\r\n          })}\r\n        >\r\n          <option value=\"boardType\">BoradType</option>\r\n          <option value=\"barType\">BarType</option>\r\n          <option value=\"stackBarType\">StackBarType</option>\r\n          <option value=\"pieType\">PieType</option>\r\n       \r\n        </select>\r\n        {errors.store && errors.store.message}\r\n      \r\n       <Controller\r\n  name={\"startDate\"}\r\n  control={control}\r\n  defaultValue={new Date('May 1,2021')}\r\n  render={({ field: { onChange, value } }) => {\r\n    return (\r\n      <DatePicker\r\n        className=\"p-2 rounded border-gray ez-input w-100\"\r\n        onChange={onChange}\r\n        selected={value}\r\n        dateFormat=\"MM/yyyy\"\r\n        showMonthYearPicker\r\n        showFullMonthYearPicker\r\n      />\r\n    );\r\n  }}\r\n/>\r\n      <span className=\"mx-2 align-self-center\">\r\n        ~\r\n      </span>\r\n      <Controller\r\n  name={\"endDate\"}\r\n  control={control}\r\n  defaultValue={new Date('September 1,2021')}\r\n  render={({ field: { onChange, value } }) => {\r\n    return (\r\n      <DatePicker\r\n        className=\"p-2 rounded border-gray ez-input w-100\"\r\n        onChange={onChange}\r\n        selected={value}\r\n        dateFormat=\"MM/yyyy\"\r\n        showMonthYearPicker\r\n        showFullMonthYearPicker\r\n        // minDate={startDate}\r\n      />\r\n    );\r\n  }}\r\n/>\r\n      \r\n        <Button type=\"submit\" className=\"mx-2 text-nowrap\" >検索</Button>\r\n        <Button type=\"button\" className=\"text-nowrap\" >リフレッシュ</Button>  \r\n        </div>\r\n      </form>\r\n  \r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\n\r\nfunction Footer() {\r\n\r\n  return (\r\n    <React.Fragment>\r\n       <div  className=\"bg-gray py-1 mt-5 font-weight-bold w-100 text-center \">\r\n        <div className=\"text-white\">\r\n        ©TOHO Business Service Co.,Ltd All rights reserved.\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\n\r\nexport default function Form (props){\r\n  let tableData=[];\r\n  if(props.formData){\r\n      // 그냥 임의로 첫번째 값에 대한 값 th 로 작성\r\n      let data =props.formData[0];\r\n      if(data){\r\n        // 여기서 바로 검색시 아래 데이터 재구성 되게 리 렌더링\r\n        props.setFormIdFilter(data.id)\r\n        for(let i=0;i<data.sections.length;i++){\r\n          data.sections[i].fields.map((el)=>\r\n          tableData.push(el.text))\r\n        }\r\n      }\r\n      else{\r\n        props.setFormIdFilter('6144508999e12e0b857cf40f')\r\n      }\r\n    }\r\n  return( \r\n    <React.Fragment>\r\n          <thead  className=\"bg-light\">\r\n            <tr>\r\n              { \r\n              tableData.map((el,idx)=>\r\n              <th key={idx}>\r\n                {el}\r\n              </th>\r\n                )}\r\n            </tr>\r\n          </thead>\r\n            \r\n    </React.Fragment>\r\n  );\r\n}","import React from 'react';\r\n\r\nexport default function Posts ( posts ){\r\n  const tableData=Object.entries(posts)\r\n  return (\r\n    <React.Fragment>\r\n      <tbody>\r\n      {\r\n      tableData[0][1].map((el,idx)=>\r\n      <tr key={idx}>\r\n        {\r\n        el.map((item,index)=>\r\n        <td key={index}>\r\n        {item}\r\n        </td>\r\n        )}\r\n     </tr>\r\n    )}\r\n    </tbody>\r\n  </React.Fragment>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nconst Pagination = ({ postsPerPage, totalPosts, paginate }) => {\r\n  const pageNumbers = [];\r\n  for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n  return (\r\n    <div >\r\n      <nav>\r\n        <ul className=\"pagination ez-pagination\">\r\n          {pageNumbers.map(number => (\r\n            <li key={number} className=\"page-item\">\r\n              <span onClick={() => paginate(number)} className=\"page-link\">\r\n                {number}\r\n              </span>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;","import React,{useState} from 'react';\r\nimport Post from './Post';\r\nimport Pagination from './Pagination';\r\n\r\nexport default function Report (props){\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [postsPerPage, setPostsPerPage] = useState(10);\r\n\r\n  const indexOfLast = currentPage * postsPerPage;\r\n  const indexOfFirst = indexOfLast - postsPerPage;\r\n let searchMonth = props.searchMonth;\r\n console.log(searchMonth)\r\n  let tableData=[];\r\n\r\n  if(props.reportData){\r\n    let data =props.reportData;\r\n    if(data){\r\n      for(let i=0;i<data.length;i++){\r\n        let test = Object.values(data[i].answers)\r\n        var cnt = test[1]\r\n        let tablePass=[];\r\n\r\n        if(cnt){\r\n              if(cnt.length ===1){\r\n           \r\n                for(let j=0;j<2;j++){\r\n                  if(j===0){\r\n                    Object.values(test[0]).map(el=>\r\n                    typeof(el) === typeof('string') ?\r\n                      tablePass.push(el):\r\n                      tablePass.push(' ')\r\n                    )\r\n                  } \r\n                  else{\r\n                    if(test[1][j-1] !=undefined){\r\n                      Object.values(test[1][j-1]).map(el=>\r\n                        typeof(el) === typeof('string') ?\r\n                        tablePass.push(el):\r\n                        tablePass.push(' ')\r\n                        )\r\n                      }\r\n                  }\r\n                }\r\n                let monthCondition=searchMonth.filter(el => el==tablePass[0].slice(5,7))\r\n                if(monthCondition.length>0)\r\n                {\r\n                  tableData.push(tablePass)\r\n                }\r\n                tablePass=[];\r\n              }\r\n              \r\n              else{\r\n                for(let j=0;j<cnt.length;j++){\r\n\r\n                  Object.values(test[0]).map(el=>\r\n                  typeof(el) === typeof('string') ?\r\n                  tablePass.push(el):\r\n                  tablePass.push(' ')\r\n                  )\r\n                  Object.values(test[1][j]).map(el=>\r\n                  typeof(el) === typeof('string') ?\r\n                  tablePass.push(el):\r\n                  tablePass.push(' ')\r\n                  )\r\n                  let monthCondition=searchMonth.filter(el => el==tablePass[0].slice(5,7))\r\n                  if(monthCondition.length>0)\r\n                  {\r\n                    tableData.push(tablePass)\r\n                  }\r\n                  tablePass=[];\r\n                }\r\n              }\r\n            }\r\n        // else{\r\n        //   console.log('case3 @!@#!@#')\r\n        //   if(test[0]){\r\n\r\n        //     test[0].map(el=>\r\n        //       tableData.push(Object.values(el)))\r\n        //     }\r\n        //   }\r\n      }\r\n    }\r\n  }\r\n\r\n  function currentPosts(tmp) {\r\n    let currentPosts = 0;\r\n    currentPosts = tmp.slice(indexOfFirst, indexOfLast);\r\n    return currentPosts;\r\n  }\r\n\r\n  return( \r\n    <React.Fragment>\r\n      <Post post={currentPosts(tableData)}/>\r\n      <Pagination postsPerPage={postsPerPage} totalPosts={tableData.length} paginate={setCurrentPage}></Pagination>\r\n    </React.Fragment>\r\n  );\r\n}","import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nconst API='https://ec2-13-127-174-162.ap-south-1.compute.amazonaws.com/api/';\r\n\r\nexport default function useFetch (url){\r\n  const [data, setData] = useState([]);\r\n  const [err, setError] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        setError(null);\r\n        setData(null);\r\n        setLoading(true);\r\n\r\n        const response = await axios.get(\r\n          API+url,{\r\n            headers:{\r\n              'Authorization':`Bearer ${localStorage.getItem(\"access_token\")}`\r\n            }\r\n          }\r\n        );\r\n        setData(response.data); // 데이터는 response.data 안에 들어있습니다.\r\n      } catch (e) {\r\n        console.log(e)\r\n        setError(e);\r\n      }\r\n      setLoading(false);\r\n    };\r\n    fetchData();\r\n  }, [url]);\r\n  if(loading) \r\n  return loading\r\n  else{\r\n    return data;\r\n  }\r\n  }","import  { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst API='https://ec2-13-127-174-162.ap-south-1.compute.amazonaws.com/api/';\r\n\r\nexport default function useFetchFilter (url,field,id){\r\n  const [data, setData] = useState([]);\r\n  const [err, setError] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        setError(null);\r\n        setData(null);\r\n        setLoading(true);\r\n\r\n        const response = await axios.get(\r\n          API+url+ '?filter='+encodeURIComponent(`{\"where\":{\"${field}\":\"${id}\"}}`),{\r\n            headers:{\r\n              'Authorization':`Bearer ${localStorage.getItem(\"access_token\")}`\r\n            }\r\n          }\r\n        );\r\n        setData(response.data); // 데이터는 response.data 안에 들어있습니다.\r\n      } catch (e) {\r\n        console.log(e)\r\n        setError(e);\r\n      }\r\n      setLoading(false);\r\n    };\r\n    fetchData();\r\n  }, [url,field,id]);\r\nif(loading) \r\nreturn loading\r\nelse{\r\n  return data;\r\n}\r\n}","import React, { PureComponent } from 'react';\r\nimport { BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\n\r\n// function Posts ( posts ){\r\nexport default function BarShape (props) {\r\n\r\nconst data1 = props.data.filter(el=>el.dataType=='原材料仕入チェック')[0]\r\nconst data2 = props.data.filter(el=>el.dataType=='温度管理記録')[0]\r\nconst data3 = props.data.filter(el=>el.dataType==\"トイレ清掃記録\")[0]\r\nconst data4 = props.data.filter(el=>el.dataType==\"その他\")[0]\r\nconsole.log('testetsetis ####',data1)\r\n\r\nconst data = [\r\n  {\r\n    name: '1月',\r\n    原材料: data1['01'], \r\n    温度: data2['01'],\r\n    トイレ: data3['01'],\r\n    その他: data4['01'],\r\n  },\r\n  {\r\n    name: '2月',\r\n    原材料: data1['02'], \r\n    温度: data2['02'],\r\n    トイレ: data3['02'],\r\n    その他: data4['02'],\r\n  },\r\n  {\r\n    name: '3月',\r\n    原材料: data1['03'], \r\n    温度: data2['03'],\r\n    トイレ: data3['03'],\r\n    その他: data4['03'],\r\n  },\r\n  {\r\n    name: '4月',\r\n    原材料: data1['04'], \r\n    温度: data2['04'],\r\n    トイレ: data3['04'],\r\n    その他: data4['04'],\r\n  },\r\n  {\r\n    name: '5月',\r\n    原材料: data1['05'], \r\n    温度: data2['05'],\r\n    トイレ: data3['05'],\r\n    その他: data4['05'],\r\n  },\r\n  {\r\n    name: '6月',\r\n    原材料: data1['06'], \r\n    温度: data2['06'],\r\n    トイレ: data3['06'],\r\n    その他: data4['06'],\r\n  },\r\n  {\r\n    name: '7月',\r\n    原材料: data1['07'], \r\n    温度: data2['07'],\r\n    トイレ: data3['07'],\r\n    その他: data4['07'],\r\n  },\r\n  {\r\n    name: '8月',\r\n    原材料: data1['08'], \r\n    温度: data2['08'],\r\n    トイレ: data3['08'],\r\n    その他: data4['08'],\r\n  },\r\n  {\r\n    name: '9月',\r\n    原材料: data1['09'], \r\n    温度: data2['09'],\r\n    トイレ: data3['09'],\r\n    その他: data4['09'],\r\n  },\r\n  {\r\n    name: '10月',\r\n    原材料: data1['10'], \r\n    温度: data2['10'],\r\n    トイレ: data3['10'],\r\n    その他: data4['10'],\r\n  },\r\n  {\r\n    name: '11月',\r\n    原材料: data1['11'], \r\n    温度: data2['11'],\r\n    トイレ: data3['11'],\r\n    その他: data4['11'],\r\n  },\r\n  {\r\n    name: '12月',\r\n    原材料: data1['12'], \r\n    温度: data2['12'],\r\n    トイレ: data3['12'],\r\n    その他: data4['12'],\r\n  },\r\n];\r\n\r\n\r\n\r\n    return (\r\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n        <BarChart\r\n          width={500}\r\n          height={300}\r\n          data={data}\r\n          margin={{\r\n            top: 5,\r\n            right: 30,\r\n            left: 20,\r\n            bottom: 5,\r\n          }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"name\" />\r\n          <YAxis  />\r\n          <Tooltip />\r\n          <Legend />\r\n          <Bar dataKey=\"原材料\" fill=\"#33add6\" />\r\n          <Bar dataKey=\"温度\" fill=\"#ff813d\" />\r\n          <Bar dataKey=\"トイレ\" fill=\"#b6dd0a\" />\r\n          <Bar dataKey=\"その他\" fill=\"#33d633\" />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n// export default class BarShape extends PureComponent {\r\n//   static demoUrl = 'https://codesandbox.io/s/simple-bar-chart-tpz8r';\r\n\r\n//   render() {\r\n//     return (\r\n//       <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n//         <BarChart\r\n//           width={500}\r\n//           height={300}\r\n//           data={data}\r\n//           margin={{\r\n//             top: 5,\r\n//             right: 30,\r\n//             left: 20,\r\n//             bottom: 5,\r\n//           }}\r\n//         >\r\n//           <CartesianGrid strokeDasharray=\"3 3\" />\r\n//           <XAxis dataKey=\"name\" />\r\n//           <YAxis />\r\n//           <Tooltip />\r\n//           <Legend />\r\n//           <Bar dataKey=\"温度\" fill=\"#8884d8\" />\r\n//           <Bar dataKey=\"原材料\" fill=\"#82ca9d\" />\r\n//         </BarChart>\r\n//       </ResponsiveContainer>\r\n//     );\r\n//   }\r\n// }\r\n","\r\nimport React, { PureComponent } from 'react';\r\nimport { PieChart, Pie, Sector, Cell, ResponsiveContainer ,Tooltip,Legend} from 'recharts';\r\n\r\n\r\nconst COLORS = ['#33add6', '#ff813d', '#b6dd0a', '#33d633'];\r\n\r\nconst RADIAN = Math.PI / 180;\r\n\r\nconst renderCustomizedLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, percent, index }) => {\r\n  const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n  const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n\r\n  return (\r\n    <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\r\n      {`${(percent * 100).toFixed(0)}%`}\r\n    </text>\r\n  );\r\n};\r\n\r\nexport default function PieShape (props) {\r\n \r\nconst data1 = props.data.filter(el=>el.dataType=='原材料仕入チェック')[0]\r\nconst data2 = props.data.filter(el=>el.dataType=='温度管理記録')[0]\r\nconst data3 = props.data.filter(el=>el.dataType==\"トイレ清掃記録\")[0]\r\nconst data4 = props.data.filter(el=>el.dataType==\"その他\")[0]\r\nconsole.log('testetsetis ####',data1)\r\n\r\nconst data = [\r\n  { name: '原材料仕入チェック', value:data1['sum'] },\r\n  { name: '温度管理記録', value: data2['sum'] },\r\n  { name: 'トイレ清掃記録', value: data3['sum'] },\r\n  { name: 'その他', value: data4['sum'] },\r\n];\r\n    return (\r\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n        <PieChart width={400} height={400}>\r\n          <Pie\r\n            data={data}\r\n            cx=\"50%\"\r\n            cy=\"50%\"\r\n            labelLine={false}\r\n            label={renderCustomizedLabel}\r\n            innerRadius={60}\r\n            outerRadius={130}\r\n            fill=\"#8884d8\"\r\n            dataKey=\"value\"\r\n            label\r\n          >\r\n            {data.map((entry, index) => (\r\n              <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n            ))}\r\n          </Pie>\r\n          <Tooltip />\r\n          <Legend />\r\n        </PieChart>\r\n      </ResponsiveContainer>\r\n\r\n    );\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport { BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\n\r\n// function Posts ( posts ){\r\nexport default function BarShape (props) {\r\n\r\nconst data1 = props.data.filter(el=>el.dataType=='原材料仕入チェック')[0]\r\nconst data2 = props.data.filter(el=>el.dataType=='温度管理記録')[0]\r\nconst data3 = props.data.filter(el=>el.dataType==\"トイレ清掃記録\")[0]\r\nconst data4 = props.data.filter(el=>el.dataType==\"その他\")[0]\r\nconsole.log('testetsetis ####',data1)\r\n\r\nconst data = [\r\n  {\r\n    name: '1月',\r\n    原材料: data1['01'], \r\n    温度: data2['01'],\r\n    トイレ: data3['01'],\r\n    その他: data4['01'],\r\n  },\r\n  {\r\n    name: '2月',\r\n    原材料: data1['02'], \r\n    温度: data2['02'],\r\n    トイレ: data3['02'],\r\n    その他: data4['02'],\r\n  },\r\n  {\r\n    name: '3月',\r\n    原材料: data1['03'], \r\n    温度: data2['03'],\r\n    トイレ: data3['03'],\r\n    その他: data4['03'],\r\n  },\r\n  {\r\n    name: '4月',\r\n    原材料: data1['04'], \r\n    温度: data2['04'],\r\n    トイレ: data3['04'],\r\n    その他: data4['04'],\r\n  },\r\n  {\r\n    name: '5月',\r\n    原材料: data1['05'], \r\n    温度: data2['05'],\r\n    トイレ: data3['05'],\r\n    その他: data4['05'],\r\n  },\r\n  {\r\n    name: '6月',\r\n    原材料: data1['06'], \r\n    温度: data2['06'],\r\n    トイレ: data3['06'],\r\n    その他: data4['06'],\r\n  },\r\n  {\r\n    name: '7月',\r\n    原材料: data1['07'], \r\n    温度: data2['07'],\r\n    トイレ: data3['07'],\r\n    その他: data4['07'],\r\n  },\r\n  {\r\n    name: '8月',\r\n    原材料: data1['08'], \r\n    温度: data2['08'],\r\n    トイレ: data3['08'],\r\n    その他: data4['08'],\r\n  },\r\n  {\r\n    name: '9月',\r\n    原材料: data1['09'], \r\n    温度: data2['09'],\r\n    トイレ: data3['09'],\r\n    その他: data4['09'],\r\n  },\r\n  {\r\n    name: '10月',\r\n    原材料: data1['10'], \r\n    温度: data2['10'],\r\n    トイレ: data3['10'],\r\n    その他: data4['10'],\r\n  },\r\n  {\r\n    name: '11月',\r\n    原材料: data1['11'], \r\n    温度: data2['11'],\r\n    トイレ: data3['11'],\r\n    その他: data4['11'],\r\n  },\r\n  {\r\n    name: '12月',\r\n    原材料: data1['12'], \r\n    温度: data2['12'],\r\n    トイレ: data3['12'],\r\n    その他: data4['12'],\r\n  },\r\n];\r\n\r\n\r\n\r\n    return (\r\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n        <BarChart\r\n          width={500}\r\n          height={300}\r\n          data={data}\r\n          margin={{\r\n            top: 5,\r\n            right: 30,\r\n            left: 20,\r\n            bottom: 5,\r\n          }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"name\" />\r\n          <YAxis  />\r\n          <Tooltip />\r\n          <Legend />\r\n          <Bar dataKey=\"原材料\" stackId=\"a\"fill=\"#33add6\" />\r\n          <Bar dataKey=\"温度\" stackId=\"a\"fill=\"#ff813d\" />\r\n          <Bar dataKey=\"トイレ\"stackId=\"a\" fill=\"#b6dd0a\" />\r\n          <Bar dataKey=\"その他\"stackId=\"a\" fill=\"#33d633\" />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    );\r\n}","import React from \"react\";\r\nimport { useTable, useGlobalFilter, useSortBy } from \"react-table\";\r\n\r\nfunction MonthTable({ columns, data }) {\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n    setGlobalFilter\r\n  } = useTable({ columns, data }, useGlobalFilter, useSortBy);\r\n\r\n  return (\r\n    <>\r\n       <div className=\"title text-center my-3\" style={{ fontWeight:\"bold\",fontSize:\"18px\" }}>\r\n       年度別項目別違反件数のグラフです。詳細については、項目を選択した後、検索をご利用下さい。\r\n      </div>\r\n      <table {...getTableProps()} className=\"w-100 text-center\">\r\n        <thead>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => (\r\n                <th {...column.getHeaderProps()}>\r\n                  {column.render(\"Header\")}\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {rows.map((row,tridx) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}\r\n              >\r\n                {row.cells.map((cell,idx) => {\r\n                  return(\r\n                   idx === 0 ||idx ===row.cells.length-1?\r\n                      <th  className={\r\n                        tridx===0?\"bg-blue\":\r\n                        tridx===1?\"bg-orange\":\r\n                        tridx===2?\"bg-yellow\":\r\n                        \"bg-green\"\r\n                      } \r\n                       {...cell.getCellProps()}>{cell.render(\"Cell\")}\r\n\r\n                      </th>:\r\n                      <td  className={\r\n                        tridx===0?\"bg-blue-td\":\r\n                        tridx===1?\"bg-orange-td\":\r\n                        tridx===2?\"bg-yellow-td\":\r\n                        \"bg-green-td\"\r\n                      } \r\n                      {...cell.getCellProps()}>{cell.render(\"Cell\")}\r\n\r\n                      </td>\r\n                    \r\n                    )\r\n                  })}\r\n               \r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MonthTable;\r\n","import React from \"react\";\r\n// import {Button} from \"react-bootstrap\";\r\n\r\n\r\nfunction Loading() {\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\" text-center loading h-100 spinner\" >\r\n        <div className=\"spinner-border text-primary\"style={{width: \"4rem\", height: \"4rem\"}}  role=\"status\">\r\n          <span className=\"sr-only\"></span>\r\n        </div>\r\n          <div className=\"text-primary\">\r\n          Loading...\r\n          </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Loading;\r\n","\r\nexport default function MonUncleanData (data,type){\r\n\r\n\r\n\r\n  let typeName\r\n  switch (type){\r\n    case '60cdc056db2269136c7c28ad' :\r\n      typeName='温度管理記録' ;\r\n        break;\r\n    case '60cdc065db2269136c7c28ae' :\r\n      typeName='トイレ清掃記録' ;\r\n        break;\r\n    case '60cdc09adb2269136c7c28b0' :\r\n      typeName='その他' ;\r\n        break;\r\n    default :\r\n    typeName= '原材料仕入チェック';\r\n}\r\n// const monthUncleanDatas=[];\r\nconst monthUncleanData={ \r\n    dataType:typeName,\r\n    \"01\":0,\r\n    \"02\":0,\r\n    \"03\":0,\r\n    \"04\":0,\r\n    \"05\":0,\r\n    \"06\":0,\r\n    \"07\":0,\r\n    \"08\":0,\r\n    \"09\":0,\r\n    \"10\":0,\r\n    \"11\":0,\r\n    \"12\":0,\r\n    sum:0,\r\n    };\r\nif(typeName =='温度管理記録'){\r\n    monthUncleanData['07']=5;\r\n    monthUncleanData['09']=1;\r\n    monthUncleanData['sum']=6;\r\n}\r\nif(typeName =='その他'){\r\n    monthUncleanData['05']=1;\r\n    monthUncleanData['06']=2;\r\n    monthUncleanData['09']=3;\r\n    monthUncleanData['sum']=6;\r\n}\r\nif(typeName =='トイレ清掃記録'){\r\n    monthUncleanData['05']=3;\r\n    monthUncleanData['06']=4;\r\n    monthUncleanData['08']=2;\r\n    monthUncleanData['sum']=9;\r\n}\r\n    if(data){\r\n      for(let i=0;i<data.length;i++){\r\n        let test = Object.values(data[i].answers)\r\n        var cnt = test[1]\r\n        let tablePass=[];\r\n        if(cnt){\r\n              if(cnt.length ===1){\r\n           \r\n                for(let j=0;j<2;j++){\r\n                  if(j===0){\r\n                    Object.values(test[0]).map(el=>\r\n                    typeof(el) === typeof('string') ?\r\n                      tablePass.push(el):\r\n                      tablePass.push(' ')\r\n                    )\r\n                  } \r\n                  else{\r\n                    if(test[1][j-1] !=undefined){\r\n                      Object.values(test[1][j-1]).map(el=>\r\n                        typeof(el) === typeof('string') ?\r\n                        tablePass.push(el):\r\n                        tablePass.push(' ')\r\n                        )\r\n                      }\r\n                  }\r\n                }\r\n                \r\n                let cnt2 =tablePass.filter(el=>el=='✕'||el=='否'||el=='X')\r\n                if(cnt2.length>0){\r\n                  let i= tablePass[0].slice(5,7);\r\n                  monthUncleanData[i]=monthUncleanData[i]+1;\r\n                  monthUncleanData['sum']=monthUncleanData['sum']+1;\r\n                }\r\n                tablePass=[];\r\n              }\r\n              \r\n              else{\r\n                for(let j=0;j<cnt.length;j++){\r\n\r\n                  Object.values(test[0]).map(el=>\r\n                  typeof(el) === typeof('string') ?\r\n                  tablePass.push(el):\r\n                  tablePass.push(' ')\r\n                  )\r\n                  Object.values(test[1][j]).map(el=>\r\n                  typeof(el) === typeof('string') ?\r\n                  tablePass.push(el):\r\n                  tablePass.push(' ')\r\n                  )\r\n                  let cnt2 =tablePass.filter(el=>el=='✕'||el=='否'||el=='X')\r\n                  if(cnt2.length>0){\r\n                    let i= tablePass[0].slice(5,7);\r\n                    monthUncleanData[i]=monthUncleanData[i]+1;\r\n                    monthUncleanData['sum']=monthUncleanData['sum']+1;\r\n                  }\r\n                  tablePass=[];\r\n                }\r\n              }\r\n            }\r\n      }\r\n      }\r\n      return monthUncleanData;\r\n}\r\n// Object.values(test[0]).map(el=>\r\n//   typeof(el) === typeof('string') ?\r\n//   tablePass.push(el):\r\n//   tablePass.push(' ')\r\n//   )\r\n//   Object.values(test[1][j]).map(el=>\r\n//   typeof(el) === typeof('string') ?\r\n//   tablePass.push(el):\r\n//   tablePass.push(' ')\r\n//   )\r\n//   tableData.push(tablePass)\r\n//   tablePass=[];","import React, { useMemo,useState} from 'react';\r\nimport \"../styles.css\";\r\nimport Topnav from './components/Topnav';\r\nimport Search from './components/Search';\r\nimport Footer from './components/Footer';\r\nimport Form from './components/Table/Form';\r\nimport Report from './components/Table/Report';\r\nimport useFetch from './hooks/useFetch';\r\nimport useFetchFilter from './hooks/useFetchFilter';\r\nimport useFetchFormFilter from './hooks/useFetchFormFilter';\r\nimport BarShape from './components/Charts/Bar'\r\nimport PieShape from './components/Charts/Pie'\r\nimport StackBar from './components/Charts/StackBar'\r\nimport MonthTable from './components/MonthTable';\r\nimport Loading from './components/Loading';\r\nimport MonUncleanData from './MonUncleanData';\r\nimport MonthCondition from './MonthCondition';\r\n\r\n\r\nfunction Home() {\r\n  const [storeIdFilter,setStoreIdFilter] =useState('60cd60df061f9c0ee82403ae')\r\n  const [formIdFilter,setFormIdFilter] =useState('6144508999e12e0b857cf40f')\r\n  const [typeId,setTypeIdFilter] =useState('60cdc047db2269136c7c28ac')\r\n  const [chart,setChart] =useState('boardType')\r\n  const [startDate,setStartDate] =useState('2021-05')\r\n  const [endDate,setEndDate] =useState('2021-09')\r\n\r\n  const region=useFetch('regions')\r\n  const store=useFetch('stores')\r\n  const form=useFetchFormFilter('forms',storeIdFilter,typeId)\r\n  const report=useFetchFilter('reports','formId',formIdFilter)\r\n  const storeName=useFetchFilter('stores','id',storeIdFilter)\r\n\r\n\r\nconst handleOnSubmit = (data)=>{\r\n  console.log('hi',data)\r\n  setStoreIdFilter(data.store)\r\n  setTypeIdFilter(data.dataType)\r\n  setChart(data.charts)\r\n  setStartDate(data.startDate)\r\n  setEndDate(data.endDate)\r\n}\r\nconst searchMonth =MonthCondition(startDate,endDate);\r\nconst monUncleanData= [MonUncleanData(report,'60cdc047db2269136c7c28ac'),MonUncleanData(report,'60cdc056db2269136c7c28ad'),MonUncleanData(report,'60cdc065db2269136c7c28ae'),MonUncleanData(report,'60cdc09adb2269136c7c28b0')];\r\n  \r\nconst monColumns = useMemo(\r\n  () => [\r\n    {\r\n      accessor: \"dataType\",\r\n      Header: \"区分\"\r\n    },\r\n    {\r\n      accessor: \"01\",\r\n      Header: \"1月\"\r\n    },\r\n    {\r\n      accessor: \"02\",\r\n      Header: \"2月\"\r\n    },\r\n    {\r\n      accessor: \"03\",\r\n      Header: \"3月\"\r\n    },\r\n    {\r\n      accessor: \"04\",\r\n      Header: \"4月\"\r\n    },\r\n    {\r\n      accessor: \"05\",\r\n      Header: \"5月\"\r\n    },\r\n    {\r\n      accessor: \"06\",\r\n      Header: \"6月\"\r\n    },\r\n    {\r\n      accessor: \"07\",\r\n      Header: \"7月\"\r\n    },\r\n    {\r\n      accessor: \"08\",\r\n      Header: \"8月\"\r\n    },\r\n    {\r\n      accessor: \"09\",\r\n      Header: \"9月\"\r\n    },\r\n    {\r\n      accessor: \"10\",\r\n      Header: \"10月\"\r\n    },\r\n    {\r\n      accessor: \"11\",\r\n      Header: \"11月\"\r\n    },\r\n    {\r\n      accessor: \"12\",\r\n      Header: \"12月\"\r\n    },\r\n    {\r\n      accessor: \"sum\",\r\n      Header: \"合計\"\r\n    },\r\n  ],\r\n  []\r\n);\r\n\r\nconst monData = useMemo(\r\n  () =>monUncleanData,[monUncleanData]\r\n);\r\nif(region===true||form == true || report=== true)\r\nreturn <React.Fragment><Loading/></React.Fragment>\r\nreturn (\r\n        <React.Fragment>\r\n          <div  style={{ margin:\"0 150px\" }}>\r\n            <Topnav/>\r\n            <Search regionData={region} storeData={store} handleOnSubmit={handleOnSubmit} />\r\n            <div cl>\r\n            本データは、現時点での最新データを表示します。\r\n              </div>\r\n              {/* {selectedStore&&\r\n              <div className=\"text-center my-2\">\r\n                  {selectedStore[\"name\"]}\r\n              </div>\r\n              } */}\r\n            {\r\n            chart === 'boardType'?\r\n            <div  className=\"mt-5\">\r\n              <table className=\"w-100 text-center\">\r\n                {form &&\r\n                <Form formData={form}  setFormIdFilter={setFormIdFilter} />\r\n                }\r\n                {report&&\r\n                  <Report reportData={report} searchMonth={searchMonth}/>\r\n                }\r\n              </table>\r\n\r\n              </div>\r\n            :\r\n            chart === 'barType'?\r\n            <div className=\"mt-5\" style={{ height:\"350px\" }}>\r\n              <BarShape data={monUncleanData}/>\r\n            </div>\r\n            :\r\n            chart === 'stackBarType'?\r\n            <div  className=\"mt-5\" style={{ height:\"350px\" }}>\r\n              <StackBar data={monUncleanData}/>\r\n            </div>\r\n            :\r\n            <div  className=\"mt-5\" style={{ height:\"350px\" }}>\r\n              <PieShape data={monUncleanData}/>\r\n            </div>\r\n            }\r\n          <div>\r\n            {report&&\r\n              \r\n              <MonthTable columns={monColumns} data={monData} />\r\n            }\r\n          </div>\r\n          <Footer/>\r\n          </div>\r\n      </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Home;","import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nconst API='https://ec2-13-127-174-162.ap-south-1.compute.amazonaws.com/api/';\r\n\r\nexport default function useFetchFormFilter (url,storeId,typeId){\r\n  const [data, setData] = useState([]);\r\n  const [err, setError] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        setError(null);\r\n        setData(null);\r\n        setLoading(true);\r\n\r\n        const response = await axios.get(\r\n          API+url+ '?filter='+encodeURIComponent(`{\"where\":{\"storeId\":\"${storeId}\",\"formTypeId\":\"${typeId}\"}}`),{\r\n            headers:{\r\n              'Authorization':`Bearer ${localStorage.getItem(\"access_token\")}`\r\n            }\r\n          }\r\n        );\r\n        setData(response.data); // 데이터는 response.data 안에 들어있습니다.\r\n      } catch (e) {\r\n        console.log(e)\r\n        setError(e);\r\n      }\r\n      setLoading(false);\r\n    };\r\n    fetchData();\r\n  }, [url,storeId,typeId]);\r\nif(loading) \r\nreturn loading\r\nelse{\r\n  return data;\r\n}\r\n}","\r\nexport default function MonthCondition (start,end){\r\n   \r\n  let monthData=[];\r\n  let a=Number(start.slice(-2))\r\n  let b=Number(end.slice(-2))\r\n  let c=b-a+1;\r\n  for(let i=0; i<c; i++){\r\n    let c=a+i;\r\n    if(c>9){\r\n      c= \"0\"+c\r\n      console.log(c)\r\n      c= (c.slice(-2))\r\n      monthData.push(c)\r\n    }\r\n    else{\r\n      c= \"0\"+c\r\n      monthData.push(c)\r\n    }\r\n  }\r\n  return monthData\r\n}","import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n// axios.defaults.baseURL = \"https://ec2-13-127-174-162.ap-south-1.compute.amazonaws.com/api/\";\r\n// axios.defaults.withCredentials = true;\r\nconst API='https://ec2-13-127-174-162.ap-south-1.compute.amazonaws.com/api/';\r\nexport default function GetToken (email=\"utsunomiya@fdes.com\",password=\"Test@123\" ){\r\n    \r\n  const [token, setToken] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchToken = async () => {\r\n      try {\r\n        // 요청이 시작 할 때에는 error 와 users 를 초기화하고\r\n        // const response = await axios.get(\r\n        //   API+'/stores'\r\n        // );\r\n        const response = await axios.post(\r\n          API+'users/login',{\r\n            \"email\": email,\r\n            \"password\": password\r\n          }\r\n        );\r\n        setToken(response.data.token); // 데이터는 response.data 안에 들어있습니다.\r\n        if(response.data.token){\r\n          localStorage.setItem(\"access_token\",response.data.token);\r\n        }\r\n      } catch (e) {\r\n          console.log(e)\r\n      }\r\n    };\r\n\r\n    fetchToken();\r\n  }, []);\r\n  return token;\r\n}","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles.css';\nimport Home from './pages/Home'\nimport GetToken from './pages/API/getToken';\n\nfunction App() {\nGetToken();\n  \n  \n  return (\n    <React.Fragment>\n      {/* <Loading/> */}\n     <Home/>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}